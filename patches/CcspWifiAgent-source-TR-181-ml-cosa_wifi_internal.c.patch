--- ./CcspWifiAgent/source/TR-181/ml/cosa_wifi_internal.c
+++ ./CcspWifiAgent/source/TR-181/ml/cosa_wifi_internal.c	2015-05-04 11:39:36.222783877 -0600
@@ -116,6 +116,17 @@
     return  (ANSC_HANDLE)pMyObject;
 }
 
+BOOL updateCiruitIdThread()
+{
+	BOOL ret = FALSE;
+	int count = 1;
+    while ((!ret) && count <= 3) {
+        sleep(15);
+        ret = UpdateCircuitId();
+		count++;
+    }
+}
+
 /**********************************************************************
 
     caller:     self
@@ -776,6 +787,9 @@
     if (pWifiAp != NULL)
         CosaWifiRegGetMacFiltInfo(pWifiAp);
     
+	pthread_t tid;
+   	pthread_create(&tid, NULL, &updateCiruitIdThread, NULL);
+	
 EXIT:
 	return returnStatus;
 }
@@ -808,7 +822,7 @@
 CosaWifiReInitialize
     (
         ANSC_HANDLE                 hThisObject,
-        ULONG                       uRadioIndex
+        ULONG                       uRadioIndex  //0, 1
     )
 {
     ANSC_STATUS                     returnStatus        = ANSC_STATUS_SUCCESS;
@@ -823,7 +837,7 @@
     PCOSA_CONTEXT_LINK_OBJECT       pLinkObj            = (PCOSA_CONTEXT_LINK_OBJECT)NULL;
     PSINGLE_LINK_ENTRY              pSLinkEntry         = (PSINGLE_LINK_ENTRY       )NULL;
 
-    returnStatus = CosaDmlWiFiInit((ANSC_HANDLE)pMyObject->hPoamWiFiDm, &uRadioIndex);
+    returnStatus = CosaDmlWiFiInit((ANSC_HANDLE)pMyObject->hPoamWiFiDm, NULL);
 
     if ( returnStatus != ANSC_STATUS_SUCCESS )
     {
@@ -844,6 +858,7 @@
     uSsidCount = CosaDmlWiFiSsidGetNumberOfEntries((ANSC_HANDLE)pMyObject->hPoamWiFiDm);
     for( uIndex = 0; uIndex < uSsidCount; uIndex++)
     {
+		//for each Device.WiFi.SSID.1
         pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->SsidQueue, uIndex);
         pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
         pWifiSsid   = pLinkObj->hContext;
@@ -855,19 +870,23 @@
         }
 
         sprintf(PathName, "wifi%d", uRadioIndex);
+        //if Device.WiFi.SSID.1.LowerLayers(Device.WiFi.Radio.1. (Device.WiFi.Radio.1.Name (wifi0)))  == wifi0
         if (AnscEqualString(pWifiSsid->SSID.Cfg.WiFiRadioName, PathName, TRUE)) {
             /*retrieve data from backend*/
+			//reload ssid parameters  
             CosaDmlWiFiSsidGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, uIndex, &pWifiSsid->SSID);
 
+			//give PathName=Device.WiFi.SSID.1.
             sprintf(PathName, "Device.WiFi.SSID.%d.", pLinkObj->InstanceNumber);
 	    for (uApIndex = 0; uApIndex < uSsidCount; uApIndex++)
 	    {
                 pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->AccessPointQueue, uApIndex);
                 pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
                 pWifiAp   = pLinkObj->hContext;
-
+				//if Device.WiFi.AccessPoint.x.SSIDReference == Device.WiFi.SSID.1.
 		if (AnscEqualString(pWifiAp->AP.Cfg.SSID, PathName, TRUE))
 		{
+					//reload AP, SEC WPS
 #ifndef _COSA_INTEL_USG_ATOM_
                     CosaDmlWiFiApGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->AP);   
                     CosaDmlWiFiApSecGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->SEC);
@@ -888,6 +907,117 @@
     return returnStatus;
 }
 
+ANSC_STATUS
+CosaWifiReInitializeRadioAndAp
+    (
+        ANSC_HANDLE                 hThisObject,
+        ULONG 						indexes
+    )
+{
+    ANSC_STATUS                     returnStatus        = ANSC_STATUS_SUCCESS;
+    PCOSA_DATAMODEL_WIFI            pMyObject           = (PCOSA_DATAMODEL_WIFI)hThisObject;
+    ULONG                           uIndex              = 0;
+    ULONG                           uApIndex            = 0; 
+    ULONG                           uSsidCount          = 0;
+    ULONG                           uApCount            = 0;    
+    PCOSA_DML_WIFI_RADIO            pWifiRadio          = NULL;
+    PCOSA_DML_WIFI_SSID             pWifiSsid           = (PCOSA_DML_WIFI_SSID      )NULL;
+    PCOSA_DML_WIFI_AP               pWifiAp             = (PCOSA_DML_WIFI_AP        )NULL;        
+    PCOSA_CONTEXT_LINK_OBJECT       pLinkObj            = (PCOSA_CONTEXT_LINK_OBJECT)NULL;
+    PSINGLE_LINK_ENTRY              pSLinkEntry         = (PSINGLE_LINK_ENTRY       )NULL;
+	ULONG                       	uRadioIndex			= 0; 
+	ULONG 							radioIndex=0, apIndex=0, radioIndex_2=0, apIndex_2=0;
+	
+	radioIndex   =(indexes>>24) & 0xff;
+	radioIndex_2 =(indexes>>16) & 0xff;
+	apIndex      =(indexes>>8) & 0xff;
+	apIndex_2    =indexes & 0xff;
+	
+	//printf("-- %s indexes=%lu radioIndex=%lu apIndex=%lu radioIndex_2=%lu, apIndex_2=%lu\n", __func__, indexes, radioIndex, apIndex, radioIndex_2, apIndex_2);
+	
+    if(radioIndex_2==0 && apIndex_2==0) {
+		returnStatus = CosaDmlWiFiFactoryResetRadioAndAp(radioIndex, apIndex, TRUE);
+	} else {
+		returnStatus = CosaDmlWiFiFactoryResetRadioAndAp(radioIndex, apIndex, FALSE);
+		returnStatus = CosaDmlWiFiFactoryResetRadioAndAp(radioIndex_2, apIndex_2, TRUE);
+	}
+	
+    if ( returnStatus != ANSC_STATUS_SUCCESS )  {
+        CcspTraceWarning(("CosaWifiInitialize - WiFi failed to initialize. Is WiFi supposed to start?\n"));
+        return  returnStatus;
+    }
+
+	if(radioIndex>0) {
+		uRadioIndex	= radioIndex-1; 
+		//reload pWifiRadio
+		pWifiRadio = pMyObject->pRadio+uRadioIndex;
+        CosaDmlWiFiRadioGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, uRadioIndex, &pWifiRadio->Radio);
+	}
+	if(radioIndex_2>0) {
+		uRadioIndex	= radioIndex_2-1; 
+		//reload pWifiRadio
+		pWifiRadio = pMyObject->pRadio+uRadioIndex;
+        CosaDmlWiFiRadioGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, uRadioIndex, &pWifiRadio->Radio);
+	}
+	
+	if(apIndex>0) {
+		uApIndex = apIndex-1;
+		
+		pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->SsidQueue, uApIndex);
+        pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
+        pWifiSsid   = pLinkObj->hContext;
+        if (!pWifiSsid)
+            return ANSC_STATUS_RESOURCES;
+
+		pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->AccessPointQueue, uApIndex);
+		pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
+		pWifiAp   = pLinkObj->hContext;
+				
+		//reload ssid parameters  
+        CosaDmlWiFiSsidGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, uApIndex, &pWifiSsid->SSID);
+		
+		// reload AP, SEC WPS
+#ifndef _COSA_INTEL_USG_ATOM_
+		CosaDmlWiFiApGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->AP);   
+		CosaDmlWiFiApSecGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->SEC);
+		CosaDmlWiFiApWpsGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->WPS);
+#else
+		CosaDmlWiFiApGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->AP);   
+		CosaDmlWiFiApSecGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->SEC);
+		CosaDmlWiFiApWpsGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->WPS);
+#endif	
+	}
+	
+	if(apIndex_2>0) {
+		uApIndex = apIndex_2-1;
+		
+		pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->SsidQueue, uApIndex);
+        pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
+        pWifiSsid   = pLinkObj->hContext;
+        if (!pWifiSsid)
+            return ANSC_STATUS_RESOURCES;
+
+		pSLinkEntry = AnscQueueGetEntryByIndex(&pMyObject->AccessPointQueue, uApIndex);
+		pLinkObj    = ACCESS_COSA_CONTEXT_LINK_OBJECT(pSLinkEntry);
+		pWifiAp   = pLinkObj->hContext;
+				
+		//reload ssid parameters  
+        CosaDmlWiFiSsidGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, uApIndex, &pWifiSsid->SSID);
+		
+		// reload AP, SEC WPS
+#ifndef _COSA_INTEL_USG_ATOM_
+		CosaDmlWiFiApGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->AP);   
+		CosaDmlWiFiApSecGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->SEC);
+		CosaDmlWiFiApWpsGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.Cfg.SSID, &pWifiAp->WPS);
+#else
+		CosaDmlWiFiApGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->AP);   
+		CosaDmlWiFiApSecGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->SEC);
+		CosaDmlWiFiApWpsGetEntry((ANSC_HANDLE)pMyObject->hPoamWiFiDm, pWifiSsid->SSID.StaticInfo.Name, &pWifiAp->WPS);
+#endif	
+	}
+ 
+    return returnStatus;
+}
 /**********************************************************************
 
     caller:     self
